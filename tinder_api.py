# -*- coding: utf-8 -*-
"""Tinder_API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rRgII5x-oLmKS4vaILgBoYNhHTIL6sIk
"""

#Auth
import firebase_admin
from firebase_admin import credentials
from firebase_admin import db, firestore,auth, storage

# Fetch the service account key JSON file contents
cred = credentials.Certificate("/content/tinder-36dfc-firebase-adminsdk-l9x45-6758ee2be6.json")

# Initialize the app with a service account, granting admin privileges
#firebase_app=firebase_admin.initialize_app(cred,{})

# As an admin, the app has access to read and write all data, regradless of Security Rules
store=firestore.client()

#ref = db.reference('restricted_access/secret_document')
#print(ref.get())
"""
#Create User
user = auth.create_user(
    email='ayushi.sahu@gmail.com',
    email_verified=False,
    password='12345678',
    )
print('Sucessfully created new user: {0}'.format(user.uid))


#User Login
try:
  user = auth.get_user_by_email('aushi@gmail.com')
  print('Successfully fetched user data: {0}'.format(user.uid))
except:
  print("No user found")
"""

#SignUp
def Sign_Up(Email_Of_User, Password_Of_User):
  User_Id=''
  Message=''
  try:
    user = auth.create_user(
       email= Email_Of_User,
       email_verified=False,
       password=Password_Of_User
      )
    Message="Successfully created new user!!"
    User_Id=user.uid
    
  except:
    Message="User already exist!!"
  return {"User Id ":User_Id, " Message ":Message}

Sign_Up("yash@gmail.com","123456")

Sign_Up("ayushi.sahu@gmail.com","123456")

# Login
def Login(Email_Of_User):
  User_Id=''
  Message=''
  try:
    user = auth.get_user_by_email(Email_Of_User)
    Message="Successfully Log-In!!"
    User_Id=user.uid
    
  except:
    Message="User Not exist, Please enter email again or Signup "
  return {"User Id ":User_Id, " Message ":Message}

Login("yash@gmail.com")

#Update user data
dit={}
dit["Name"]="Ayushi"
dit["Number"]="123456789"
dit["Image"]="https://firebasestorage.googleapis.com/v0/b/tinder-36dfc.appspot.com/o/pexels-pixabay-258109.jpg?alt=media&token=4729ed6f-0ae7-4881-ad9d-510648e21833"
dit["Description"]="Single!!!"
dit["Gender"]="Female"
dit["Passion"]="Travelling"
dit["Job"]="Developer"
dit["Company"]="RST"
dit["DOB"]="27-05-1996"
dit["Location"]={
    "coordinated":{"Lat":"37.9078° N","Lng":"197.7669° E"},
    "City":"Bhopal",
    "State":"Madhya-Pradesh",
    "Country":"India"
}

def Update_User_Info(uid, dit):
  User_Details={}
  User_Details["Name"]=dit["Name"]
  User_Details["Number"]=dit["Number"]
  User_Details["Image"]=dit["Image"]
  User_Details["Description"]=dit["Description"]
  User_Details["Gender"]=dit["Gender"]
  User_Details["Passion"]=dit["Passion"]
  User_Details["Job"]=dit["Job"]
  User_Details["Company"]=dit["Company"]
  User_Details["DOB"]=dit["DOB"]
  User_Details["Location"]=dit["Location"]
  User_Details["CreatedAt"]=firestore.SERVER_TIMESTAMP
  store.collection("Users").document(uid).set(User_Details)

Update_User_Info("5ivtK97qhcgTFBUxuGusez4Cci93",dit)

def getFeed(Country,Gender):
  docs=store.collection("Users").where("Gender","==",Gender).stream()
  dict={}
  for doc in docs:
    if doc.to_dict().get("Location").get("Country")==Country:
       dit[doc.id]=doc.to_dict()
  return dit

All_Profiles=getFeed("Japan","Male")

All_Profiles

#Swipe_Profile
def Swipe_Fun(Uid_A, Uid_B, IsA_Yes,IsB_Yes,First_Time):
  dit={}
  dit["Uid_A"]=Uid_A
  dit["Uid_B"]=Uid_B
  dit["IsA_Yes"]=IsA_Yes
  dit["IsB_Yes"]=IsB_Yes
  dit["Id_The_Other_User_Shown_Profile_Atleast_Once"]=First_Time
  dit["Created_At"]=firestore.SERVER_TIMESTAMP
  store.collection("Matches").add(dit)

Uid_A="5ivtK97qhcgTFBUxuGusez4Cci93"
Uid_B="5ivtK97qhcgTFBUxuGusez4Cci92"
IsA_Yes=True
IsB_Yes=True
First_Time=False
Swipe_Fun(Uid_A,Uid_B,IsA_Yes,IsB_Yes,First_Time)

#Match_Profile
def Get_Match_Fun(Uid):

  docs=store.collection("Matches").stream()
  dit_Swipes={}

  for doc in docs:
    if (doc.to_dict().get("Uid_A") == Uid or doc.to_dict().get("Uid_B") == Uid ) and (doc.to_dict().get("IsA_Yes")== True and doc.to_dict().get("IsB_Yes")==True):
      dit_Swipes[doc.id]=doc.to_dict()

  return dit_Swipes

Get_Match_Fun("5ivtK97qhcgTFBUxuGusez4Cci92")